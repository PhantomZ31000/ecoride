security:
    # ðŸ”¹ Configuration du hashage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # ðŸ”¹ Configuration des providers (chargement des utilisateurs depuis la base de donnÃ©es)
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # ðŸ”¹ Configuration des firewalls (gestion des authentifications et accÃ¨s)
    firewalls:
        # ðŸ”¹ Firewall pour la partie de dÃ©veloppement
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # ðŸ”¹ Configuration principale pour l'authentification des utilisateurs
        main:
            lazy: true
            provider: app_user_provider
            entry_point: App\Security\LoginFormAuthenticator # ðŸ”¹ Ajout de l'entry_point
            form_login:
                login_path: login
                check_path: login
            logout:
                path: logout
                target: /
            stateless: false  # ðŸ”¹ Devrait Ãªtre "false" sauf si API totalement sans session
            custom_authenticators:
                - App\Security\LoginFormAuthenticator

    # ðŸ”¹ ContrÃ´le d'accÃ¨s pour diffÃ©rentes sections du site
    access_control:
        - { path: ^/espace-employe, roles: ROLE_EMPLOYE }
        - { path: ^/espace-administrateur, roles: ROLE_ADMIN }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/avis, roles: IS_AUTHENTICATED_ANONYMOUSLY }

# ðŸ”¹ ParamÃ¨tres spÃ©cifiques aux tests
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
