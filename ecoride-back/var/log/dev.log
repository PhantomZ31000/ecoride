[2025-02-09T01:53:42.855135+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2025-02-09T01:53:43.273998+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" 0.319 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0","total_time":0.319} []
[2025-02-09T01:53:43.285263+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-02-09T01:53:43.286088+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2025-02-09T01:53:43.384568+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.097445 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.097445} []
[2025-02-09T01:53:43.396232+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" 0.012341 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints","total_time":0.012341} []
[2025-02-09T01:53:43.398342+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-02-09T01:53:43.425341+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.025945 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.025945} []
[2025-02-09T01:53:48.566269+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2025-02-09T01:53:48.803016+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" 0.232622 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0","total_time":0.232622} []
[2025-02-09T01:53:48.803537+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-02-09T01:53:48.804259+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2025-02-09T01:53:48.894223+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.089358 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.089358} []
[2025-02-09T01:53:48.895319+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" 0.011723 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints","total_time":0.011723} []
[2025-02-09T01:53:48.897741+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-02-09T01:53:48.927191+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.028659 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.028659} []
[2025-02-09T02:02:42.221744+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at RouterListener.php line 149 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:149)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:181)"} []
[2025-02-09T02:02:42.845309+01:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"http://localhost:8000/_wdt/styles","method":"GET"} []
[2025-02-09T02:02:43.005600+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d729b9"},"request_uri":"http://localhost:8000/_wdt/d729b9?XDEBUG_IGNORE=1","method":"GET"} []
[2025-02-09T02:37:13.072070+01:00] console.CRITICAL: Error thrown while running command "make:entity Voiture". Message: "Class "App\Entity\Types" not found" {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\Types\" not found at C:\\Users\\Alex\\Ecoride\\ecoride-back\\src\\Entity\\User.php:37)","command":"make:entity Voiture","message":"Class \"App\\Entity\\Types\" not found"} []
[2025-02-09T02:37:13.074227+01:00] console.DEBUG: Command "make:entity Voiture" exited with code "1" {"command":"make:entity Voiture","code":1} []
[2025-02-09T02:37:13.086945+01:00] php.CRITICAL: Uncaught Error: Class "App\Entity\Types" not found {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\Types\" not found at C:\\Users\\Alex\\Ecoride\\ecoride-back\\src\\Entity\\User.php:37)"} []
[2025-02-09T02:57:56.185934+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-09T02:57:56.344596+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\MySQL\\Driver.php:33)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'"} []
[2025-02-09T02:57:56.345042+01:00] console.DEBUG: Command "make:migration" exited with code "1049" {"command":"make:migration","code":1049} []
[2025-02-09T03:01:22.461511+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-09T03:01:22.469168+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\MySQL\\Driver.php:33)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'"} []
[2025-02-09T03:01:22.469627+01:00] console.DEBUG: Command "make:migration" exited with code "1049" {"command":"make:migration","code":1049} []
[2025-02-09T03:01:49.662035+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-09T03:01:49.689419+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'ecoride' at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\MySQL\\Driver.php:33)","command":"doctrine:migrations:migrate","message":"An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'ecoride'"} []
[2025-02-09T03:01:49.689820+01:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1049" {"command":"doctrine:migrations:migrate","code":1049} []
[2025-02-09T03:04:10.505184+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-09T03:04:10.647337+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:10.744840+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:10.794484+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:10.794759+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:10.893822+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:10.894158+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-09T03:04:10.917086+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:10.917551+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:10.918078+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:10.982245+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:11.025621+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:11.379736+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-09T03:04:11.432856+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-09T03:04:15.190272+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-09T03:04:15.196244+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:16.130765+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-09T03:04:16.132269+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-09T03:04:16.148149+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-09T03:04:16.158061+01:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.259008+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-09T03:04:16.260173+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-09T03:04:16.260431+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-09T03:04:16.501528+01:00] doctrine.DEBUG: Beginning transaction [] []
[2025-02-09T03:04:16.531439+01:00] doctrine.DEBUG: Executing query: CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, passager_id INT NOT NULL, conducteur_id INT NOT NULL, covoiturage_id INT NOT NULL, note INT NOT NULL, commentaire LONGTEXT DEFAULT NULL, date_avis DATE NOT NULL, INDEX IDX_8F91ABF071A51189 (passager_id), INDEX IDX_8F91ABF0F16F4AC6 (conducteur_id), INDEX IDX_8F91ABF062671590 (covoiturage_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, passager_id INT NOT NULL, conducteur_id INT NOT NULL, covoiturage_id INT NOT NULL, note INT NOT NULL, commentaire LONGTEXT DEFAULT NULL, date_avis DATE NOT NULL, INDEX IDX_8F91ABF071A51189 (passager_id), INDEX IDX_8F91ABF0F16F4AC6 (conducteur_id), INDEX IDX_8F91ABF062671590 (covoiturage_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.562805+01:00] doctrine.DEBUG: Executing query: CREATE TABLE configuration (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE configuration (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.577898+01:00] doctrine.DEBUG: Executing query: CREATE TABLE covoiturage (id INT AUTO_INCREMENT NOT NULL, conducteur_id INT NOT NULL, voiture_id INT NOT NULL, lieu_depart VARCHAR(255) NOT NULL, lieu_arrivee VARCHAR(255) NOT NULL, date_depart DATE NOT NULL, heure_depart TIME NOT NULL, prix DOUBLE PRECISION NOT NULL, nombre_places_disponibles INT NOT NULL, INDEX IDX_28C79E89F16F4AC6 (conducteur_id), INDEX IDX_28C79E89181A8BA (voiture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE covoiturage (id INT AUTO_INCREMENT NOT NULL, conducteur_id INT NOT NULL, voiture_id INT NOT NULL, lieu_depart VARCHAR(255) NOT NULL, lieu_arrivee VARCHAR(255) NOT NULL, date_depart DATE NOT NULL, heure_depart TIME NOT NULL, prix DOUBLE PRECISION NOT NULL, nombre_places_disponibles INT NOT NULL, INDEX IDX_28C79E89F16F4AC6 (conducteur_id), INDEX IDX_28C79E89181A8BA (voiture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.606431+01:00] doctrine.DEBUG: Executing query: CREATE TABLE dispose (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE dispose (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.621535+01:00] doctrine.DEBUG: Executing query: CREATE TABLE marque (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE marque (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.636823+01:00] doctrine.DEBUG: Executing query: CREATE TABLE parametre (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE parametre (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.652034+01:00] doctrine.DEBUG: Executing query: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, pseudo VARCHAR(50) NOT NULL, nom VARCHAR(50) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, telephone VARCHAR(20) DEFAULT NULL, photo LONGBLOB DEFAULT NULL, role VARCHAR(20) NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL COMMENT '(DC2Type:json)', password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_IDENTIFIER_EMAIL (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, pseudo VARCHAR(50) NOT NULL, nom VARCHAR(50) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, telephone VARCHAR(20) DEFAULT NULL, photo LONGBLOB DEFAULT NULL, role VARCHAR(20) NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL COMMENT '(DC2Type:json)', password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_IDENTIFIER_EMAIL (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.678291+01:00] doctrine.DEBUG: Executing query: CREATE TABLE voiture (id INT AUTO_INCREMENT NOT NULL, utilisateur_id INT NOT NULL, modele VARCHAR(255) NOT NULL, immatriculation VARCHAR(255) NOT NULL, energie VARCHAR(255) NOT NULL, couleur VARCHAR(255) DEFAULT NULL, marque VARCHAR(255) DEFAULT NULL, premiere_immatriculation DATE DEFAULT NULL, nombre_places INT DEFAULT NULL, INDEX IDX_E9E2810FFB88E14F (utilisateur_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE voiture (id INT AUTO_INCREMENT NOT NULL, utilisateur_id INT NOT NULL, modele VARCHAR(255) NOT NULL, immatriculation VARCHAR(255) NOT NULL, energie VARCHAR(255) NOT NULL, couleur VARCHAR(255) DEFAULT NULL, marque VARCHAR(255) DEFAULT NULL, premiere_immatriculation DATE DEFAULT NULL, nombre_places INT DEFAULT NULL, INDEX IDX_E9E2810FFB88E14F (utilisateur_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.704420+01:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-09T03:04:16.735972+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF071A51189 FOREIGN KEY (passager_id) REFERENCES user (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF071A51189 FOREIGN KEY (passager_id) REFERENCES user (id)"} []
[2025-02-09T03:04:16.811353+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF0F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES user (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF0F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES user (id)"} []
[2025-02-09T03:04:16.880418+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF062671590 FOREIGN KEY (covoiturage_id) REFERENCES covoiturage (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF062671590 FOREIGN KEY (covoiturage_id) REFERENCES covoiturage (id)"} []
[2025-02-09T03:04:16.964347+01:00] doctrine.DEBUG: Executing query: ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES user (id) {"sql":"ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES user (id)"} []
[2025-02-09T03:04:17.037835+01:00] doctrine.DEBUG: Executing query: ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89181A8BA FOREIGN KEY (voiture_id) REFERENCES voiture (id) {"sql":"ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89181A8BA FOREIGN KEY (voiture_id) REFERENCES voiture (id)"} []
[2025-02-09T03:04:17.111058+01:00] doctrine.DEBUG: Executing query: ALTER TABLE voiture ADD CONSTRAINT FK_E9E2810FFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES user (id) {"sql":"ALTER TABLE voiture ADD CONSTRAINT FK_E9E2810FFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES user (id)"} []
[2025-02-09T03:04:17.201448+01:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250209020410","2":"2025-02-09 03:04:16","3":682}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250209020410","2":"2025-02-09 03:04:16","3":682},"types":{"1":2,"2":2,"3":1}} []
[2025-02-09T03:04:17.220461+01:00] deprecation.INFO: User Deprecated: Context: trying to commit a transaction Problem: the transaction is already committed, relying on silencing is deprecated. Solution: override `AbstractMigration::isTransactional()` so that it returns false. Automate that by setting `transactional` to false in the configuration. More details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:193, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Context: trying to commit a transaction\r\nProblem: the transaction is already committed, relying on silencing is deprecated.\r\nSolution: override `AbstractMigration::isTransactional()` so that it returns false.\r\nAutomate that by setting `transactional` to false in the configuration.\r\nMore details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:193, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-09T03:04:17.229811+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-11T00:54:30.924517+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-11T00:59:31.051617+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T01:31:55.518032+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T01:41:23.601152+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T01:41:23.923208+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T01:41:26.209299+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\MySQL\\Driver.php:33)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée"} []
[2025-02-16T01:41:26.210139+01:00] console.DEBUG: Command "make:migration" exited with code "2002" {"command":"make:migration","code":2002} []
[2025-02-16T01:42:28.451859+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T01:42:30.531232+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\MySQL\\Driver.php:33)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [2002] Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée"} []
[2025-02-16T01:42:30.532001+01:00] console.DEBUG: Command "make:migration" exited with code "2002" {"command":"make:migration","code":2002} []
[2025-02-16T02:09:30.208875+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:09:30.435950+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:09:30.537422+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:09:30.540670+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:09:30.540819+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:09:30.647193+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:09:30.647504+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:09:30.648135+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:09:30.648320+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:09:30.649191+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:09:30.727307+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:09:30.727638+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:09:30.944930+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\migrations\\src\\Exception\\MetadataStorageError.php:13)","command":"make:migration","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-02-16T02:09:30.958453+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:09:31.078047+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:10:08.804169+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:10:08.810028+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:10:08.812096+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:10:08.815849+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:10:08.816027+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:10:08.816504+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:10:08.816669+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:10:08.817258+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:10:08.840394+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:10:08.840631+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:10:08.843818+01:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version) {"sql":"ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version)"} []
[2025-02-16T02:10:08.941013+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:sync-metadata-storage". Message: "An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 1932): An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:118)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1932): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:33)","command":"doctrine:migrations:sync-metadata-storage","message":"An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine"} []
[2025-02-16T02:10:08.941456+01:00] console.DEBUG: Command "doctrine:migrations:sync-metadata-storage" exited with code "1932" {"command":"doctrine:migrations:sync-metadata-storage","code":1932} []
[2025-02-16T02:10:08.948124+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:11:04.773963+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:11:04.780282+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:11:04.785064+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:11:04.786080+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:11:04.790081+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:11:04.790273+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:11:04.790816+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:11:04.790987+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:11:04.791572+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:11:04.814702+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:11:04.814975+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:11:04.818441+01:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version) {"sql":"ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version)"} []
[2025-02-16T02:11:04.822498+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate --no-interaction". Message: "An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 1932): An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:118)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1932): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:33)","command":"doctrine:migrations:migrate --no-interaction","message":"An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine"} []
[2025-02-16T02:11:04.822910+01:00] console.DEBUG: Command "doctrine:migrations:migrate --no-interaction" exited with code "1932" {"command":"doctrine:migrations:migrate --no-interaction","code":1932} []
[2025-02-16T02:11:04.829241+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:12:00.526886+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:12:00.532821+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:12:00.537259+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:12:00.538265+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:12:00.542074+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:12:00.542255+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:12:00.542714+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:12:00.542880+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:12:00.543419+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:12:00.571828+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:12:00.572076+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:12:00.575374+01:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version) {"sql":"ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version)"} []
[2025-02-16T02:12:00.579178+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate --no-interaction". Message: "An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 1932): An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:118)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1932): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:33)","command":"doctrine:migrations:migrate --no-interaction","message":"An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine"} []
[2025-02-16T02:12:00.579583+01:00] console.DEBUG: Command "doctrine:migrations:migrate --no-interaction" exited with code "1932" {"command":"doctrine:migrations:migrate --no-interaction","code":1932} []
[2025-02-16T02:12:00.586015+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:15:00.386807+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:15:00.392684+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:00.394817+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:15:00.395327+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:00.395486+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:15:00.399118+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:00.399295+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:00.399822+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:00.399994+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:00.400594+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:15:00.423892+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:00.424139+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:00.429331+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue." {"exception":"[object] (Doctrine\\Migrations\\Exception\\MetadataStorageError(code: 0): The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\migrations\\src\\Exception\\MetadataStorageError.php:13)","command":"make:migration","message":"The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue."} []
[2025-02-16T02:15:00.429709+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:15:00.435096+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:15:10.761600+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:15:10.767549+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:10.772103+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:10.773092+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:15:10.776851+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:10.776985+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:10.777533+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:10.777706+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:10.778303+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T02:15:10.803680+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:15:10.803904+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T02:15:10.807203+01:00] doctrine.DEBUG: Executing statement: ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version) {"sql":"ALTER TABLE doctrine_migration_versions CHANGE version version VARCHAR(191) NOT NULL, ADD PRIMARY KEY (version)"} []
[2025-02-16T02:15:10.811062+01:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate --no-interaction". Message: "An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 1932): An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\API\\MySQL\\ExceptionConverter.php:118)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1932): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:33)","command":"doctrine:migrations:migrate --no-interaction","message":"An exception occurred while executing a query: SQLSTATE[42S02]: Base table or view not found: 1932 Table 'ecoride.doctrine_migration_versions' doesn't exist in engine"} []
[2025-02-16T02:15:10.811475+01:00] console.DEBUG: Command "doctrine:migrations:migrate --no-interaction" exited with code "1932" {"command":"doctrine:migrations:migrate --no-interaction","code":1932} []
[2025-02-16T02:15:10.817912+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:18:43.833029+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:18:43.839309+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:18:43.841578+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:18:43.899157+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:18:43.899492+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:18:44.002692+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:18:44.003047+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:18:44.026630+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:18:44.027111+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:18:44.027674+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:18:44.067804+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:18:44.972778+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:18:45.651053+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:18:45.684738+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:18:45.685149+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:18:45.691188+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:20:55.073213+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:20:55.079292+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:20:55.081613+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:20:55.083494+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:20:55.083697+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:20:55.086035+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:20:55.086256+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:20:55.114005+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:20:55.114521+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:20:55.115026+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:20:55.117082+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:20:55.141710+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:20:55.159718+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:20:55.162198+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:20:55.162581+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:20:55.167856+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:35:12.496405+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:35:12.523963+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:35:12.540690+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:35:12.542980+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:35:12.545146+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:35:12.545321+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:35:12.547761+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:35:12.547916+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:35:12.568512+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:35:12.569048+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:35:12.569497+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:35:12.571635+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:35:12.589594+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:35:12.604716+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:35:12.606460+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:35:12.606862+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:35:12.609513+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:37:38.245271+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:37:38.271114+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:37:38.275674+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:37:38.277963+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:37:38.280186+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:37:38.280367+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:37:38.282725+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:37:38.282928+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:37:38.307662+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:37:38.308128+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:37:38.308561+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:37:38.310592+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:37:38.327772+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:37:38.342537+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:37:38.344295+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:37:38.344712+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:37:38.347206+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:42:08.409534+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:42:08.415846+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:42:08.418223+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:42:08.420249+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:42:08.420473+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:42:08.422972+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:42:08.423214+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:42:08.447076+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:42:08.447576+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:42:08.448109+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:42:08.450343+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:42:08.475874+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:42:08.494652+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:42:08.497302+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:42:08.497701+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:42:08.503109+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:46:01.020161+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:46:01.045738+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:46:01.050319+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:46:01.052453+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:46:01.054684+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:46:01.054857+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:46:01.057206+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:46:01.057395+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:46:01.078209+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:46:01.078647+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:46:01.079108+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:46:01.081088+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:46:01.098076+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:46:01.112389+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:46:01.114063+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:46:01.114443+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:46:01.116681+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:48:09.689759+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:48:09.714438+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:48:09.718750+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:09.720990+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:09.723104+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:09.723277+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:09.725503+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:09.725692+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:48:09.745727+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:09.746214+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:09.746704+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:09.748762+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:09.761879+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "syntax error, unexpected token ";"" {"exception":"[object] (ParseError(code: 0): syntax error, unexpected token \";\" at C:\\Users\\Alex\\Ecoride\\ecoride-back\\src\\Entity\\User.php:48)","command":"make:migration","message":"syntax error, unexpected token \";\""} []
[2025-02-16T02:48:09.762252+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:48:09.762350+01:00] php.CRITICAL: Uncaught Error: syntax error, unexpected token ";" {"exception":"[object] (ParseError(code: 0): syntax error, unexpected token \";\" at C:\\Users\\Alex\\Ecoride\\ecoride-back\\src\\Entity\\User.php:48)"} []
[2025-02-16T02:48:09.769348+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:48:27.510795+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:48:27.535243+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:48:27.554724+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:27.556929+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:27.559114+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:27.559332+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:27.561707+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:27.561942+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:48:27.583195+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:27.583648+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:27.584152+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:48:27.586201+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:27.603485+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:48:27.617462+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:48:27.619139+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:48:27.619531+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:48:27.622150+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:50:20.079537+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T02:50:20.106234+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:50:20.110876+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:50:20.113184+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:50:20.115389+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:50:20.115557+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:50:20.117923+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:50:20.118119+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:50:20.139098+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:50:20.139660+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:50:20.140180+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:50:20.142261+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:50:20.177692+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:50:20.192779+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:50:20.194528+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:50:20.194942+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:50:20.197358+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T02:57:55.867664+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T02:57:55.873815+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:57:55.876025+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:57:55.877912+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:57:55.878091+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:57:55.880439+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:57:55.880652+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T02:57:55.901648+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:57:55.902128+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:57:55.902688+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T02:57:55.904742+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:57:55.930498+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T02:57:55.948544+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T02:57:55.951098+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T02:57:55.951483+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T02:57:55.956816+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:05:47.708221+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:05:47.714587+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:05:47.719221+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:05:47.720289+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:05:47.725173+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:05:47.734148+01:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:05:47.765302+01:00] console.DEBUG: Command "doctrine:migrations:migrate --no-interaction" exited with code "1" {"command":"doctrine:migrations:migrate --no-interaction","code":1} []
[2025-02-16T03:05:47.765583+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:06:21.695436+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:06:21.701437+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.703560+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.704316+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.704476+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.708035+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.708272+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.708931+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.709104+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.709625+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:06:21.732002+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.732234+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.735304+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:06:21.736974+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.737157+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.737560+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.737720+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.738054+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.738225+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.738695+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.738863+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.739366+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:06:21.760462+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.760744+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.761310+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:06:21.763655+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.763867+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:06:21.785702+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.786291+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.786822+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:06:21.788654+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.814705+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:06:21.827135+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:06:21.829680+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T03:06:21.830068+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T03:06:21.835445+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:12:27.304808+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T03:12:27.330552+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:12:27.354927+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.357327+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.357869+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.358042+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.361824+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.362008+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.362513+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.362685+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.363143+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:12:27.385648+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.385933+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.389187+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:12:27.391256+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.391441+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.391823+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.391990+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.392342+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.392511+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.392992+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.393161+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.393666+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:12:27.414930+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.415176+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.415754+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:12:27.418129+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.418313+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:12:27.438514+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.439076+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.439644+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:12:27.441502+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.460239+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:12:27.469535+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:12:27.471348+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T03:12:27.471752+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T03:12:27.474393+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:13:40.838755+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T03:13:40.863024+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:13:40.883608+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.885839+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.886327+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.886507+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.890210+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.890382+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.890925+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.891067+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.891543+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:13:40.913422+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.913700+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.916668+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:13:40.918684+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.918871+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.919282+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.919457+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.919850+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.920053+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.920576+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.920787+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.921275+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T03:13:40.941346+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.941629+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.942203+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:13:40.944459+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.944681+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:13:40.964614+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.965185+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.965742+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:13:40.967535+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.985526+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:13:40.994195+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:13:40.995918+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T03:13:40.996297+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T03:13:40.998725+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:15:39.380178+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T03:15:39.413478+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:15:39.417836+01:00] doctrine.DEBUG: Executing statement: DROP DATABASE `ecoride` {"sql":"DROP DATABASE `ecoride`"} []
[2025-02-16T03:15:39.436631+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:15:52.855467+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:15:52.861299+01:00] doctrine.DEBUG: Executing statement: CREATE DATABASE `ecoride` {"sql":"CREATE DATABASE `ecoride`"} []
[2025-02-16T03:15:52.862131+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:16:01.223461+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:16:01.229438+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:16:01.231514+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:16:01.233293+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:16:01.233430+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:16:01.235624+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:16:01.235811+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:16:01.256162+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:16:01.256651+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:16:01.257180+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:16:01.259243+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:16:01.284578+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:16:01.302060+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:16:01.304504+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T03:16:01.304905+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T03:16:01.310241+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:17:24.880824+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T03:17:24.905829+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:17:24.910133+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:17:24.912240+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:17:24.914383+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:17:24.914542+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:17:24.916819+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:17:24.916974+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:17:24.937234+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:17:24.937731+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:17:24.938176+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:17:24.940135+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:17:24.957781+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:17:24.971799+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:17:24.973414+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Incomplete definition. 'columns' required." {"exception":"[object] (InvalidArgumentException(code: 0): Incomplete definition. 'columns' required. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\dbal\\src\\Platforms\\AbstractPlatform.php:3239)","command":"make:migration","message":"Incomplete definition. 'columns' required."} []
[2025-02-16T03:17:24.973790+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-02-16T03:17:24.976476+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:21:18.087819+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T03:21:18.112834+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:21:18.117173+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:18.119374+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:18.121591+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:18.121766+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:18.124143+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:18.124328+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T03:21:18.147842+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:18.148309+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:18.148759+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:18.150912+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:18.202761+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:18.217684+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:21:18.258003+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T03:21:31.991863+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T03:21:31.997768+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:36.947182+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T03:21:36.948688+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T03:21:36.955109+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:21:36.966509+01:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.068333+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:21:37.069662+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:21:37.069925+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T03:21:37.310912+01:00] doctrine.DEBUG: Beginning transaction [] []
[2025-02-16T03:21:37.341689+01:00] doctrine.DEBUG: Executing query: CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, passager_id INT NOT NULL, conducteur_id INT NOT NULL, covoiturage_id INT NOT NULL, note INT NOT NULL, commentaire LONGTEXT DEFAULT NULL, date_avis DATE NOT NULL, INDEX IDX_8F91ABF071A51189 (passager_id), INDEX IDX_8F91ABF0F16F4AC6 (conducteur_id), INDEX IDX_8F91ABF062671590 (covoiturage_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE avis (id INT AUTO_INCREMENT NOT NULL, passager_id INT NOT NULL, conducteur_id INT NOT NULL, covoiturage_id INT NOT NULL, note INT NOT NULL, commentaire LONGTEXT DEFAULT NULL, date_avis DATE NOT NULL, INDEX IDX_8F91ABF071A51189 (passager_id), INDEX IDX_8F91ABF0F16F4AC6 (conducteur_id), INDEX IDX_8F91ABF062671590 (covoiturage_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.373167+01:00] doctrine.DEBUG: Executing query: CREATE TABLE configuration (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE configuration (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.387876+01:00] doctrine.DEBUG: Executing query: CREATE TABLE covoiturage (id INT AUTO_INCREMENT NOT NULL, conducteur_id INT NOT NULL, voiture_id INT NOT NULL, lieu_depart VARCHAR(255) NOT NULL, lieu_arrivee VARCHAR(255) NOT NULL, date_depart DATE NOT NULL, heure_depart TIME NOT NULL, prix DOUBLE PRECISION NOT NULL, nombre_places_disponibles INT NOT NULL, INDEX IDX_28C79E89F16F4AC6 (conducteur_id), INDEX IDX_28C79E89181A8BA (voiture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE covoiturage (id INT AUTO_INCREMENT NOT NULL, conducteur_id INT NOT NULL, voiture_id INT NOT NULL, lieu_depart VARCHAR(255) NOT NULL, lieu_arrivee VARCHAR(255) NOT NULL, date_depart DATE NOT NULL, heure_depart TIME NOT NULL, prix DOUBLE PRECISION NOT NULL, nombre_places_disponibles INT NOT NULL, INDEX IDX_28C79E89F16F4AC6 (conducteur_id), INDEX IDX_28C79E89181A8BA (voiture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.416377+01:00] doctrine.DEBUG: Executing query: CREATE TABLE dispose (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE dispose (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.430535+01:00] doctrine.DEBUG: Executing query: CREATE TABLE marque (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE marque (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.444760+01:00] doctrine.DEBUG: Executing query: CREATE TABLE parametre (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE parametre (id INT AUTO_INCREMENT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.458790+01:00] doctrine.DEBUG: Executing query: CREATE TABLE `user` (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL COMMENT '(DC2Type:json)', password VARCHAR(255) NOT NULL, pseudo VARCHAR(100) NOT NULL, nom VARCHAR(50) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, telephone VARCHAR(20) DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, role VARCHAR(20) NOT NULL, UNIQUE INDEX UNIQ_8D93D64986CC499D (pseudo), UNIQUE INDEX UNIQ_IDENTIFIER_EMAIL (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE `user` (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL COMMENT '(DC2Type:json)', password VARCHAR(255) NOT NULL, pseudo VARCHAR(100) NOT NULL, nom VARCHAR(50) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, date_naissance DATE DEFAULT NULL, adresse VARCHAR(255) DEFAULT NULL, telephone VARCHAR(20) DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, role VARCHAR(20) NOT NULL, UNIQUE INDEX UNIQ_8D93D64986CC499D (pseudo), UNIQUE INDEX UNIQ_IDENTIFIER_EMAIL (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.487100+01:00] doctrine.DEBUG: Executing query: CREATE TABLE voiture (id INT AUTO_INCREMENT NOT NULL, utilisateur_id INT NOT NULL, modele VARCHAR(255) NOT NULL, immatriculation VARCHAR(255) NOT NULL, energie VARCHAR(255) NOT NULL, couleur VARCHAR(255) DEFAULT NULL, marque VARCHAR(255) DEFAULT NULL, premiere_immatriculation DATE DEFAULT NULL, nombre_places INT DEFAULT NULL, INDEX IDX_E9E2810FFB88E14F (utilisateur_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE voiture (id INT AUTO_INCREMENT NOT NULL, utilisateur_id INT NOT NULL, modele VARCHAR(255) NOT NULL, immatriculation VARCHAR(255) NOT NULL, energie VARCHAR(255) NOT NULL, couleur VARCHAR(255) DEFAULT NULL, marque VARCHAR(255) DEFAULT NULL, premiere_immatriculation DATE DEFAULT NULL, nombre_places INT DEFAULT NULL, INDEX IDX_E9E2810FFB88E14F (utilisateur_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.513430+01:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2025-02-16T03:21:37.543210+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF071A51189 FOREIGN KEY (passager_id) REFERENCES `user` (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF071A51189 FOREIGN KEY (passager_id) REFERENCES `user` (id)"} []
[2025-02-16T03:21:37.609601+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF0F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES `user` (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF0F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES `user` (id)"} []
[2025-02-16T03:21:37.674679+01:00] doctrine.DEBUG: Executing query: ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF062671590 FOREIGN KEY (covoiturage_id) REFERENCES covoiturage (id) {"sql":"ALTER TABLE avis ADD CONSTRAINT FK_8F91ABF062671590 FOREIGN KEY (covoiturage_id) REFERENCES covoiturage (id)"} []
[2025-02-16T03:21:37.760956+01:00] doctrine.DEBUG: Executing query: ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES `user` (id) {"sql":"ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89F16F4AC6 FOREIGN KEY (conducteur_id) REFERENCES `user` (id)"} []
[2025-02-16T03:21:37.883531+01:00] doctrine.DEBUG: Executing query: ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89181A8BA FOREIGN KEY (voiture_id) REFERENCES voiture (id) {"sql":"ALTER TABLE covoiturage ADD CONSTRAINT FK_28C79E89181A8BA FOREIGN KEY (voiture_id) REFERENCES voiture (id)"} []
[2025-02-16T03:21:37.944091+01:00] doctrine.DEBUG: Executing query: ALTER TABLE voiture ADD CONSTRAINT FK_E9E2810FFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES `user` (id) {"sql":"ALTER TABLE voiture ADD CONSTRAINT FK_E9E2810FFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES `user` (id)"} []
[2025-02-16T03:21:38.021805+01:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250216022118","2":"2025-02-16 03:21:37","3":694}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250216022118","2":"2025-02-16 03:21:37","3":694},"types":{"1":2,"2":2,"3":1}} []
[2025-02-16T03:21:38.042591+01:00] deprecation.INFO: User Deprecated: Context: trying to commit a transaction Problem: the transaction is already committed, relying on silencing is deprecated. Solution: override `AbstractMigration::isTransactional()` so that it returns false. Automate that by setting `transactional` to false in the configuration. More details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:193, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Context: trying to commit a transaction\r\nProblem: the transaction is already committed, relying on silencing is deprecated.\r\nSolution: override `AbstractMigration::isTransactional()` so that it returns false.\r\nAutomate that by setting `transactional` to false in the configuration.\r\nMore details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:193, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T03:21:38.052220+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T18:03:33.527176+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T18:11:34.006616+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T18:12:22.990943+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T18:12:23.340958+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T18:12:23.558218+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:23.673043+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:23.676786+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:23.677021+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:23.800420+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:23.800734+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:23.801544+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:23.801767+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:23.811723+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T18:12:23.898096+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:23.898415+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:24.033263+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:24.174948+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.175243+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:24.175876+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.176060+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:24.176496+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.176667+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:24.177139+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.177315+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:24.177851+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T18:12:24.199658+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.199906+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:24.200420+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:24.313051+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:24.313413+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:24.336989+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:24.338088+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:24.338807+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:24.403836+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:25.011403+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:25.152304+01:00] doctrine.DEBUG: Executing statement: SELECT CHARACTER_SET_NAME FROM information_schema.COLLATIONS WHERE COLLATION_NAME = ?; (parameters: array{"1":"utf8mb4_bin"}, types: array{"1":2}) {"sql":"SELECT CHARACTER_SET_NAME\r\nFROM information_schema.COLLATIONS\r\nWHERE COLLATION_NAME = ?;","params":{"1":"utf8mb4_bin"},"types":{"1":2}} []
[2025-02-16T18:12:25.185613+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-02-16T18:12:25.294531+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T18:12:43.361499+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T18:12:43.367868+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:45.690117+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:45.691648+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"ecoride"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"ecoride"},"types":{"1":2}} []
[2025-02-16T18:12:45.697131+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:45.697384+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa           ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n          ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:45.697945+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:45.698162+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'ecoride' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:45.698771+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'ecoride'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"ecoride","2":"ecoride","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2025-02-16T18:12:45.724067+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T18:12:45.724325+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"ecoride","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"ecoride","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2025-02-16T18:12:45.760312+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:45.761308+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:45.761615+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:45.791907+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-02-16T18:12:45.801325+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T21:38:45.360903+01:00] console.DEBUG: Command "make:user" exited with code "1" {"command":"make:user","code":1} []
[2025-02-16T21:40:15.387935+01:00] console.CRITICAL: Error thrown while running command ""app:create-user"". Message: "There are no commands defined in the "app" namespace.  Did you mean one of these?     api     api:json-schema     api:openapi     doctrine:mapping" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\console\\Application.php:660)","command":"\"app:create-user\"","message":"There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping"} []
[2025-02-16T21:41:34.399876+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T21:41:39.622846+01:00] php.CRITICAL: Uncaught Error: Class "App\Entity\Put" not found {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\Put\" not found at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\api-platform\\metadata\\Resource\\Factory\\AttributesResourceMetadataCollectionFactory.php:45)"} []
[2025-02-16T21:43:47.777581+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T21:43:48.853670+01:00] php.CRITICAL: Uncaught Error: Class "App\Entity\Delete" not found {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\Delete\" not found at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\api-platform\\metadata\\Resource\\Factory\\AttributesResourceMetadataCollectionFactory.php:45)"} []
[2025-02-16T21:44:47.759376+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T21:45:31.615541+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T21:45:55.521151+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T21:45:55.591936+01:00] console.CRITICAL: Error thrown while running command ""app:create-user"". Message: "There are no commands defined in the "app" namespace.  Did you mean one of these?     api     api:json-schema     api:openapi     doctrine:mapping" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\console\\Application.php:660)","command":"\"app:create-user\"","message":"There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping"} []
[2025-02-16T21:47:05.287422+01:00] console.DEBUG: Command "make:user" exited with code "1" {"command":"make:user","code":1} []
[2025-02-16T21:47:53.737744+01:00] console.CRITICAL: Error thrown while running command ""app:create-user"". Message: "There are no commands defined in the "app" namespace.  Did you mean one of these?     api     api:json-schema     api:openapi     doctrine:mapping" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\console\\Application.php:660)","command":"\"app:create-user\"","message":"There are no commands defined in the \"app\" namespace.\n\nDid you mean one of these?\n    api\n    api:json-schema\n    api:openapi\n    doctrine:mapping"} []
[2025-02-16T21:52:50.039604+01:00] console.CRITICAL: Error thrown while running command "doctrine:query:sql". Message: "Not enough arguments (missing: "sql")." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Not enough arguments (missing: \"sql\"). at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\console\\Input\\Input.php:69)","command":"doctrine:query:sql","message":"Not enough arguments (missing: \"sql\")."} []
[2025-02-16T21:52:50.042051+01:00] console.DEBUG: Command "doctrine:query:sql" exited with code "1" {"command":"doctrine:query:sql","code":1} []
[2025-02-16T22:02:23.305187+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T22:02:23.378110+01:00] console.CRITICAL: Error thrown while running command ""doctrine:fixtures:load"". Message: "There are no commands defined in the "doctrine:fixtures" namespace.  Did you mean one of these?     doctrine     doctrine:cache     doctrine:database     doctrine:mapping     doctrine:migrations     doctrine:query     doctrine:schema  You may be looking for a command provided by the "DoctrineFixturesBundle" which is currently not installed. Try running "composer require doctrine/doctrine-fixtures-bundle --dev"." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): There are no commands defined in the \"doctrine:fixtures\" namespace.\n\nDid you mean one of these?\n    doctrine\n    doctrine:cache\n    doctrine:database\n    doctrine:mapping\n    doctrine:migrations\n    doctrine:query\n    doctrine:schema\n\nYou may be looking for a command provided by the \"DoctrineFixturesBundle\" which is currently not installed. Try running \"composer require doctrine/doctrine-fixtures-bundle --dev\". at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\framework-bundle\\EventListener\\SuggestMissingPackageSubscriber.php:70)","command":"\"doctrine:fixtures:load\"","message":"There are no commands defined in the \"doctrine:fixtures\" namespace.\n\nDid you mean one of these?\n    doctrine\n    doctrine:cache\n    doctrine:database\n    doctrine:mapping\n    doctrine:migrations\n    doctrine:query\n    doctrine:schema\n\nYou may be looking for a command provided by the \"DoctrineFixturesBundle\" which is currently not installed. Try running \"composer require doctrine/doctrine-fixtures-bundle --dev\"."} []
[2025-02-16T22:03:07.861512+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T22:03:25.825160+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T22:03:25.844265+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","idle_connection_ttl":600,"host":"127.0.0.1","port":3307,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"ecoride","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2025-02-16T22:03:25.849527+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2025-02-16T22:03:37.796126+01:00] doctrine.DEBUG: Beginning transaction [] []
[2025-02-16T22:03:37.850938+01:00] doctrine.DEBUG: Executing statement: DELETE FROM avis {"sql":"DELETE FROM avis"} []
[2025-02-16T22:03:37.851287+01:00] doctrine.DEBUG: Executing statement: DELETE FROM covoiturage {"sql":"DELETE FROM covoiturage"} []
[2025-02-16T22:03:37.851514+01:00] doctrine.DEBUG: Executing statement: DELETE FROM voiture {"sql":"DELETE FROM voiture"} []
[2025-02-16T22:03:37.851718+01:00] doctrine.DEBUG: Executing statement: DELETE FROM `user` {"sql":"DELETE FROM `user`"} []
[2025-02-16T22:03:37.851928+01:00] doctrine.DEBUG: Executing statement: DELETE FROM configuration {"sql":"DELETE FROM configuration"} []
[2025-02-16T22:03:37.852123+01:00] doctrine.DEBUG: Executing statement: DELETE FROM dispose {"sql":"DELETE FROM dispose"} []
[2025-02-16T22:03:37.852327+01:00] doctrine.DEBUG: Executing statement: DELETE FROM marque {"sql":"DELETE FROM marque"} []
[2025-02-16T22:03:37.852523+01:00] doctrine.DEBUG: Executing statement: DELETE FROM parametre {"sql":"DELETE FROM parametre"} []
[2025-02-16T22:03:39.600783+01:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-02-16T22:03:39.827728+01:00] doctrine.DEBUG: Executing statement: INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"user1@example.com","2":"[]","3":"$2y$13$d/eQyUyaHhvQa14ma2P6d.DKuEqsk3VDcVj6Bn7U1u2E.Kpfkfg9.","4":"user1","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"conducteur"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"user1@example.com","2":"[]","3":"$2y$13$d/eQyUyaHhvQa14ma2P6d.DKuEqsk3VDcVj6Bn7U1u2E.Kpfkfg9.","4":"user1","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"conducteur"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}} []
[2025-02-16T22:03:39.828575+01:00] doctrine.DEBUG: Executing statement: INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"user2@example.com","2":"[]","3":"$2y$13$UjqWYIY6a9nmolRsS5ale.mLBaXILJTubeV9TnFLeIRO/O2SlVo9q","4":"user2","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"passager"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"user2@example.com","2":"[]","3":"$2y$13$UjqWYIY6a9nmolRsS5ale.mLBaXILJTubeV9TnFLeIRO/O2SlVo9q","4":"user2","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"passager"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}} []
[2025-02-16T22:03:39.828816+01:00] doctrine.DEBUG: Executing statement: INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"admin@example.com","2":"[\"ROLE_ADMIN\"]","3":"$2y$13$1b1GocBzjnFI4.LuzrpiCOG0VupdcycD1cIRwGQ2/p664wwSI4Pla","4":"admin","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"admin"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"admin@example.com","2":"[\"ROLE_ADMIN\"]","3":"$2y$13$1b1GocBzjnFI4.LuzrpiCOG0VupdcycD1cIRwGQ2/p664wwSI4Pla","4":"admin","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"admin"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}} []
[2025-02-16T22:03:39.829090+01:00] doctrine.DEBUG: Executing statement: INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"employe@example.com","2":"[\"ROLE_EMPLOYE\"]","3":"$2y$13$IwLrCm28drAl.3d5/cvwT.gTwcv9F8MjNWKd9QYd.PbC0ovUjKxAe","4":"employe","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"employe"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO `user` (email, roles, password, pseudo, nom, prenom, date_naissance, adresse, telephone, photo, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"employe@example.com","2":"[\"ROLE_EMPLOYE\"]","3":"$2y$13$IwLrCm28drAl.3d5/cvwT.gTwcv9F8MjNWKd9QYd.PbC0ovUjKxAe","4":"employe","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":"employe"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2}} []
[2025-02-16T22:03:39.849699+01:00] doctrine.DEBUG: Executing statement: INSERT INTO voiture (modele, immatriculation, energie, couleur, marque, premiere_immatriculation, nombre_places, utilisateur_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Clio","2":"AA-123-BB","3":"essence","4":null,"5":null,"6":null,"7":null,"8":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1,"8":1}) {"sql":"INSERT INTO voiture (modele, immatriculation, energie, couleur, marque, premiere_immatriculation, nombre_places, utilisateur_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Clio","2":"AA-123-BB","3":"essence","4":null,"5":null,"6":null,"7":null,"8":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1,"8":1}} []
[2025-02-16T22:03:39.850516+01:00] doctrine.DEBUG: Executing statement: INSERT INTO covoiturage (lieu_depart, lieu_arrivee, date_depart, heure_depart, prix, nombre_places_disponibles, conducteur_id, voiture_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"Toulouse","2":"Paris","3":"2025-03-15","4":"08:00:00","5":50.0,"6":3,"7":1,"8":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO covoiturage (lieu_depart, lieu_arrivee, date_depart, heure_depart, prix, nombre_places_disponibles, conducteur_id, voiture_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"Toulouse","2":"Paris","3":"2025-03-15","4":"08:00:00","5":50.0,"6":3,"7":1,"8":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-02-16T22:03:39.851160+01:00] doctrine.DEBUG: Executing statement: INSERT INTO avis (note, commentaire, date_avis, passager_id, conducteur_id, covoiturage_id) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Super trajet!","3":"2025-02-16","4":2,"5":1,"6":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1,"6":1}) {"sql":"INSERT INTO avis (note, commentaire, date_avis, passager_id, conducteur_id, covoiturage_id) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Super trajet!","3":"2025-02-16","4":2,"5":1,"6":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1,"6":1}} []
[2025-02-16T22:03:39.876874+01:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-02-16T22:03:39.886451+01:00] doctrine.DEBUG: Committing transaction [] []
[2025-02-16T22:03:39.895456+01:00] doctrine.INFO: Disconnecting [] []
[2025-02-16T22:04:04.121532+01:00] request.INFO: Matched route "app_accueil". {"route":"app_accueil","route_parameters":{"_route":"app_accueil","_controller":"App\\Controller\\AccueilController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2025-02-16T22:04:04.166938+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-02-16T22:04:06.861397+01:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"http://localhost:8000/_wdt/styles","method":"GET"} []
[2025-02-16T22:04:08.292943+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05bf65"},"request_uri":"http://localhost:8000/_wdt/05bf65?XDEBUG_IGNORE=1","method":"GET"} []
[2025-02-16T22:14:39.414588+01:00] request.INFO: Matched route "app_accueil". {"route":"app_accueil","route_parameters":{"_route":"app_accueil","_controller":"App\\Controller\\AccueilController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2025-02-16T22:14:39.432855+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-02-16T22:14:41.446886+01:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://localhost:8000/_wdt/styles","method":"GET"} []
[2025-02-16T22:14:42.153743+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d2c98"},"request_uri":"https://localhost:8000/_wdt/1d2c98?XDEBUG_IGNORE=1","method":"GET"} []
[2025-02-16T23:06:45.174079+01:00] request.INFO: Matched route "app_accueil". {"route":"app_accueil","route_parameters":{"_route":"app_accueil","_controller":"App\\Controller\\AccueilController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2025-02-16T23:06:45.185513+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-02-16T23:06:45.548871+01:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://localhost:8000/_wdt/styles","method":"GET"} []
[2025-02-16T23:06:45.773358+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2c4b3"},"request_uri":"https://localhost:8000/_wdt/d2c4b3?XDEBUG_IGNORE=1","method":"GET"} []
[2025-02-16T23:09:03.125706+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T23:10:53.242999+01:00] deprecation.INFO: User Deprecated: The "ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter" class implements "Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface" that is deprecated since Symfony 7.2, use NameConverterInterface instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter\" class implements \"Symfony\\Component\\Serializer\\NameConverter\\AdvancedNameConverterInterface\" that is deprecated since Symfony 7.2, use NameConverterInterface instead. at C:\\Users\\Alex\\Ecoride\\ecoride-back\\vendor\\symfony\\error-handler\\DebugClassLoader.php:343)"} []
[2025-02-16T23:11:06.592964+01:00] request.INFO: Matched route "app_accueil". {"route":"app_accueil","route_parameters":{"_route":"app_accueil","_controller":"App\\Controller\\AccueilController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2025-02-16T23:11:06.602922+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-02-16T23:11:07.075178+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0b1d9c"},"request_uri":"https://localhost:8000/_wdt/0b1d9c?XDEBUG_IGNORE=1","method":"GET"} []
